/* IMPORTANT: Multiple classes and nested static classes are supported */

/*
 * uncomment this if you want to read input.
//imports for BufferedReader
import java.io.BufferedReader;
import java.io.InputStreamReader;

//import for Scanner and other utility classes
import java.util.*;
*/
import java.util.*;

// Warning: Printing unwanted or ill-formatted data to output will cause the test cases to fail

class TestClass {
    public static void main(String args[] ) throws Exception {
        /* Sample code to perform I/O:
         * Use either of these methods for input

        //BufferedReader
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        String name = br.readLine();                // Reading input from STDIN
        System.out.println("Hi, " + name + ".");    // Writing output to STDOUT

        //Scanner
        Scanner s = new Scanner(System.in);
        String name = s.nextLine();                 // Reading input from STDIN
        System.out.println("Hi, " + name + ".");    // Writing output to STDOUT

        */

        Scanner s = new Scanner(System.in);

        // Write your code here

        // input test cases
        int testCases = s.nextInt();


        while (testCases > 0) {
            int min = Integer.MAX_VALUE;
            int max = Integer.MIN_VALUE;

            Set<Integer> row = new HashSet<>();
            Set<Integer> col = new HashSet<>();

            // input row, column
            int n = s.nextInt();
            int m = s.nextInt();

            // initiate matrix with n & m
            int[][] matrix = new int[n][m];
            int count = 0;

            // insert values
            for (int i =0; i<n; i++) {
                for (int j =0; j<m; j++) {
                    matrix[i][j] = s.nextInt();
                    if (matrix[i][j] < min) {
                       min = matrix[i][j];
                    } 
                    if (matrix[i][j] > max) {
                       max = matrix[i][j];
                    }
                }
            }

            for (int i =0; i<n; i++) {
                for (int j =0; j<m; j++) {
                    if (matrix[i][j] == min || matrix[i][j] == max) {
                       row.add(i);
                       col.add(j);
                    } 
                }
            }


            for (int i = 0; i < n; i++)
            {
                for (int j = 0; j < m; j++)
                {
                    if(row.contains(i) ||  col.contains(j))
                    {

                    }
                    else {
                        count ++;
                    }
                }
            }

            System.out.println(count);
            --testCases;
        }






    }
}
